Running the sample
Build the container from within the /code folder by docker build -t docker-template .

Note that the build process makes sure that the Java files get compiled.

Launch the container with docker run -it docker-template

Verify that testing works out of the box. Within the container, run ./test.sh ./data/testing.txt ./data/solution.csv

This should create a solution.csv file within the /data folder. This should be identical that is already present in the submission's /solution folder.

Verify that training works: ./train.sh ./data/training.txt

This should overwrite the ./model/dummy-model.txt file, so subsequent testing will use the new model instead of the one shipped with the submission.




######Remote run########
ffmpeg from data to wdata using bash +
handle separators
#1-MEANS SKIP CONVERTATION
./train.sh /data/train/ 1 1
./test.sh /data/test/ /wdata/solution.csv 1 1


1. Model from
https://keras.io/examples/audio/speaker_recognition_using_cnn/
2. Half precision

128 мел
HxW 128x512
H - число мел бинов
W - зависит как раз от параметров STFT
resnet conv2d
https://pytorch.org/tutorials/beginner/audio_preprocessing_tutorial.html